schemaVersion: "2.2"
description: Docker Deployment
parameters:
  name:
    type: String
    default: "${name}"
  ports:
    type: String
    default: "${ports}"
  env:
    type: String
    default: "${env}"
  cmd:
    type: String
    default: "${cmd}"
mainSteps:
  - action: "aws:configureDocker"
    name: installDocker
    inputs:
      action: Install
      onFailure: exit
  - action: "aws:runShellScript"
    name: configureDocker
    inputs:
      runCommand:
        - usermod -a -G docker ec2-user
        - chkconfig docker on
      onFailure: exit
  - action: "aws:runShellScript"
    name: rolloutApplication
    inputs:
      runCommand:
        - |
          ${login_command}
          CURRENT_CONTAINER=$(docker ps -aql --filter ancestor=${image}:latest --format='{{.ID}}')
          if [ ! -z $CURRENT_CONTAINER ]; then docker rm -f $CURRENT_CONTAINER; fi
          docker image prune -a --force
          docker image pull ${image}:latest
          docker run --restart unless-stopped -d {{ports}} {{env}} --name {{name}} ${image}:latest {{cmd}}
